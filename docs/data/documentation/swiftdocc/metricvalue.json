{
  "abstract" : [
    {
      "text" : "An encodable value which is either a number or a string.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/SwiftDocC\/documentation\/SwiftDocC"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/MetricValue"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:9SwiftDocC11MetricValueO",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "enum"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "MetricValue"
      }
    ],
    "modules" : [
      {
        "name" : "SwiftDocC"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "MetricValue"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Enumeration",
    "symbolKind" : "enum",
    "title" : "MetricValue"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "enum"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "MetricValue"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Using either number or string values allows benchmark reports",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "to be compared without having a predefined list of possible value types.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "For example when comparing two benchmark reports a delta can be produced",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "for any numeric value without the understanding whether a number is a duration",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "in seconds or megabytes.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Similarly, string values can be checked for equality without understanding",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "what the metric represents.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/SwiftDocC\/SE"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/MetricValue\/integer(_:)",
        "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/MetricValue\/number(_:)",
        "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/MetricValue\/string(_:)"
      ],
      "title" : "Enumeration Cases"
    },
    {
      "identifiers" : [
        "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/MetricValue\/encode(to:)"
      ],
      "title" : "Instance Methods"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/swiftdocc\/metricvalue"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://SwiftDocC/SE": {
  "identifier" : "doc:\/\/SwiftDocC\/SE",
  "title" : "Swift.Encodable",
  "type" : "unresolvable"
},
"doc://SwiftDocC/documentation/SwiftDocC": {
  "abstract" : [
    {
      "text" : "Combine code comments with markup prose to produce structured, semantic documentation.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "SwiftDocC",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc"
},
"doc://SwiftDocC/documentation/SwiftDocC/MetricValue": {
  "abstract" : [
    {
      "text" : "An encodable value which is either a number or a string.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MetricValue"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/MetricValue",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MetricValue"
    }
  ],
  "role" : "symbol",
  "title" : "MetricValue",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/metricvalue"
},
"doc://SwiftDocC/documentation/SwiftDocC/MetricValue/encode(to:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "encode"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s7EncoderP",
      "text" : "Encoder"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/MetricValue\/encode(to:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "encode(to:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/metricvalue\/encode(to:)"
},
"doc://SwiftDocC/documentation/SwiftDocC/MetricValue/integer(_:)": {
  "abstract" : [
    {
      "text" : "An integer metric suitable for counters or other non-floating numbers.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "integer"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5Int64V",
      "text" : "Int64"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/MetricValue\/integer(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "MetricValue.integer(_:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/metricvalue\/integer(_:)"
},
"doc://SwiftDocC/documentation/SwiftDocC/MetricValue/number(_:)": {
  "abstract" : [
    {
      "text" : "A number metric which can be used to produce percentage delta changes.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "number"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sd",
      "text" : "Double"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/MetricValue\/number(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "MetricValue.number(_:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/metricvalue\/number(_:)"
},
"doc://SwiftDocC/documentation/SwiftDocC/MetricValue/string(_:)": {
  "abstract" : [
    {
      "text" : "A textual metric to produce match\/no match deltas.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "string"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/MetricValue\/string(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "MetricValue.string(_:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/metricvalue\/string(_:)"
}
}
}